# Εισαγωγή {#sec-intro}

```{r}
#| echo: false

source("_common.R")
```

Η επιστήμη των δεδομένων είναι ένας συναρπαστικός κλάδος που σας επιτρέπει να μετατρέψετε τα ακατέργαστα δεδομένα σε πληροφορία και γνώση.
Ο στόχος του βιβλίου "H R για την Επιστήμη των Δεδομένων" είναι να σας βοηθήσει να μάθετε τα πιο σημαντικά εργαλεία σε R που θα σας επιτρέψουν να εφαρμόσετε την επιστήμη των δεδομένων αποτελεσματικά και αναπαραγωγήσιμα καθώς διασκεδάζετε στην πορεία 😃.
Έχοντας διαβάσει αυτό το βιβλίο, θα έχετε τα εργαλεία για να αντιμετωπίσετε ένα μεγάλο εύρος προκλήσεων της επιστήμης των δεδομένων χρησιμοποιώντας τα καλύτερα μέρη της R.

## Τι θα μάθετε

Η επιστήμη των δεδομένων είναι πεδίο με μεγάλο εύρος και είναι αδύνατο να κατανοηθούν τα πάντα διαβάζοντας ένα μόνο βιβλίο.
Αυτό το βιβλίο στοχεύει στο να σας δώσει μια σταθερή βάση στα πιο σημαντικά εργαλεία και αρκετή γνώση έτσι ώστε να βρείτε τους πόρους για να μάθετε περισσότερα όταν αυτό χρειαστεί.
Το μοντέλο μας σχετικά με τα βήματα ενός τυπικού project επιστήμης δεδομένων μοιάζει κάπως έτσι @fig-ds-diagram.

```{r}
#| label: fig-ds-diagram
#| echo: false
#| fig-cap: |
#|   Στο μοντέλο μας για τη διαδικασία της επιστήμης των δεδομένων, ξεκινάτε με την εισαγωγή 
#|   και την τακτοποίηση δεδομένων. Στη συνέχεια, κατανοείτε τα δεδομένα σας με έναν επαναληπτικό κύκλο 
#|   μετασχηματισμού, οπτικοποίησης και μοντελοποίησης. Ολοκληρώνετε τη διαδικασία επικοινωνώντας 
#|   τα αποτελέσματά σας με άλλους.
#| fig-alt: |
#|   A diagram displaying the data science cycle: Import -> Tidy -> Understand 
#|   (which has the phases Transform -> Visualize -> Model in a cycle) -> 
#|   Communicate. Surrounding all of these is Communicate.
#| out.width: NULL

knitr::include_graphics("diagrams/data-science/base.png", dpi = 270)
```

Πρώτα, πρέπει να **εισαγάγετε** τα δεδομένα σας στην R.
Αυτό συνήθως σημαίνει ότι λαμβάνετε δεδομένα που είναι αποθηκευμένα σε ένα αρχείο, βάση δεδομένων ή διεπαφή προγραμματισμού εφαρμογών (application programming interface; API) και τα φορτώνετε σε μία δομή δεδομένων (data frame) στην R.
Εάν δεν μπορείτε να βάλετε τα δεδομένα σας στην R, δεν μπορείτε να κάνετε επιστήμη δεδομένων σε αυτά!

Αφού εισαγάγετε τα δεδομένα σας, είναι καλή ιδέα να τα **οργανώσετε**.
Η οργάνωση των δεδομένων σας σημαίνει την αποθήκευσή τους σε μια συνεπή μορφή που ταιριάζει με τη σημασιολογία του συνόλου δεδομένων ως προς τον αρχικό τρόπο αποθήκευσής τους.
Εν συντομία, όταν τα δεδομένα σας είναι οργανωμένα, κάθε στήλη είναι μια μεταβλητή και κάθε γραμμή είναι μια παρατήρηση.
Τα οργανωμένα δεδομένα είναι σημαντικά επειδή η συνέπεια στη δομή τους σάς επιτρέπει να εστιάσετε στην απάντηση ερωτήσεων σχετικά με τα δεδομένα και όχι στο να αγωνίζεστε να φέρετε τα δεδομένα στη σωστή μορφή για διαφορετικές λειτουργίες.

Αφού έχετε οργανωμένα δεδομένα, ένα σύνηθες επόμενο βήμα είναι να τα **μετασχηματίσετε**.
Ο μετασχηματισμός περιλαμβάνει τον περιορισμό των παρατηρήσεων (όπως για παράδειγμα όλοι οι άνθρωποι σε μια συγκεκριμένη πόλη ή όλα τα δεδομένα του περασμένου έτους), τη δημιουργία νέων μεταβλητών που είναι συναρτήσεις άλλων (όπως ο εξ αποστάσεων υπολογισμός της ταχύτητας και του χρόνου) και τον υπολογισμό ενός συνόλου συνοπτικών στατιστικών (όπως αθροίσματα και μέσοι όροι).
Όλα μαζί, η οργάνωση και ο μετασχηματισμός ονομάζονται **διένεξη (wrangling)** επειδή η μετατροπή των δεδομένων σε μια εύκολα επεξεργάσιμη μορφή συχνά μοιάζει με πάλη!

Έχοντας οργανωμένα δεδομένα με τις μεταβλητές που χρειάζεστε, υπάρχουν δύο κύριες μηχανές παραγωγής γνώσης: οπτικοποίηση και μοντελοποίηση.
Αυτά έχουν συμπληρωματικά πλεονεκτήματα και αδυναμίες, επομένως τα στοιχεία οποιασδήποτε σωστής ανάλυσης δεδομένων θα εναλλάσσονται μεταξύ των δύο πολλές φορές.

Η **οπτικοποίηση** είναι μια βασικά ανθρώπινη δραστηριότητα.
Μια καλή οπτικοποίηση θα σας δείξει στοιχεία που δεν περιμένατε ή θα δημιουργήσει νέες ερωτήσεις σχετικά με τα δεδομένα.
Μια καλή οπτικοποίηση μπορεί επίσης να υποδηλώσει ότι ρωτάτε μια λάθος ερώτηση ή ότι πρέπει να συλλέξετε διαφορετικά δεδομένα.
Οι οπτικοποιήσεις μπορεί να σας εκπλήξουν, αλλά η χρήση τους δεν επεκτείνεται ιδιαίτερα διότι απαιτούν ανθρώπινη ερμηνεία.

Τα **μοντέλα** είναι συμπληρωματικά εργαλεία οπτικοποίησης.
Αφού κάνετε τις ερωτήσεις σας αρκετά ακριβείς, μπορείτε να χρησιμοποιήσετε ένα μοντέλο για να τις απαντήσετε.
Τα μοντέλα είναι βασικά μαθηματικά ή υπολογιστικά εργαλεία, επομένως επεκτείνονται συνήθως καλά.
Ακόμα κι όταν δεν το κάνουν, συνήθως είναι φθηνότερο να αγοράσεις περισσότερους υπολογιστές παρά περισσότερους εγκεφάλους!
Όμως, κάθε μοντέλο κάνει υποθέσεις, και από τη φύση του, ένα μοντέλο δεν μπορεί να αμφισβητήσει τις δικές του υποθέσεις.
Αυτό σημαίνει ότι ένα μοντέλο δεν μπορεί κατα βάση να σας εκπλήξει.

Το τελευταίο βήμα της επιστήμης δεδομένων είναι η **επικοινωνία**, ένα απολύτως κρίσιμο μέρος κάθε project ανάλυσης δεδομένων.
Δεν έχει σημασία πόσο καλά τα μοντέλα και η οπτικοποίηση σας οδήγησαν να κατανοήσετε τα δεδομένα εάν δεν μπορείτε επίσης να κοινοποιήσετε τα αποτελέσματά σας σε άλλους.

Γύρω από όλα αυτά τα εργαλεία είναι ο **προγραμματισμός**.
Ο προγραμματισμός είναι ένα γενικό εργαλείο που χρησιμοποιείτε σχεδόν σε κάθε μέρος ενός έργου επιστήμης δεδομένων.
Δεν χρειάζεται να είστε έμπειρος προγραμματιστής για να είστε επιτυχημένος επιστήμονας δεδομένων, αλλά το να μάθετε περισσότερα για τον προγραμματισμό αποδίδει, επειδή το να γίνετε καλύτερος προγραμματιστής σάς επιτρέπει να αυτοματοποιείτε συνηθισμένες εργασίες και να επιλύετε νέα προβλήματα με μεγαλύτερη ευκολία.

Θα χρησιμοποιήσετε αυτά τα εργαλεία σε κάθε έργο επιστήμης δεδομένων, αλλά για τα περισσότερα έργα, δεν είναι αρκετά.
Υπάρχει ένας πρόχειρος "80/20" κανόνας που ισχύει εδώ: μπορείτε να αντιμετωπίσετε περίπου το 80% κάθε έργου χρησιμοποιώντας τα εργαλεία που θα μάθετε σε αυτό το βιβλίο, αλλά θα χρειαστείτε άλλα εργαλεία για να αντιμετωπίσετε το υπόλοιπο 20%.
Σε όλα τα μέρη του βιβλίου αυτού, θα σας υποδεικνύουμε πηγές μέσα απο τις οποίες μπορείτε να μάθετε περισσότερα.

## Πώς είναι οργανωμένο αυτό το βιβλίο

Η προηγούμενη περιγραφή των εργαλείων της επιστήμης των δεδομένων είναι οργανωμένη κατά προσέγγιση σύμφωνα με τη σειρά με την οποία τα χρησιμοποιείτε σε μια ανάλυση (αν και, φυσικά, θα τα επαναλλάβετε αρκετές φορές).
Σύμφωνα με την εμπειρία μας, ωστόσο, η εκμάθηση της εισαγωγής και οργάνωσης δεδομένων ως πρώτο βήμα δεν είναι η ιδανική, επειδή, στο 80% των περιπτώσεων, γίνεται ρουτίνα και βαρετή, και το υπόλοιπο 20% των περιπτώσεων είναι περίεργη και κουραστική.
Αυτό είναι ένα κακό μέρος για να ξεκινήσετε να μάθετε ένα νέο αντικείμενο!
Αντίθετα, θα ξεκινήσουμε με την οπτικοποίηση και τον μετασχηματισμό δεδομένων που έχουν ήδη εισαχθεί και οργανωθεί.
Έτσι, όταν εισάγετε και οργανώνετε τα δικά σας δεδομένα, το κίνητρό σας θα παραμείνει υψηλό επειδή γνωρίζετε ότι η ταλαιπωρία αξίζει τον κόπο.

Μέσα σε κάθε κεφάλαιο, προσπαθούμε να τηρούμε ένα συνεπές μοτίβο: ξεκικάμε με μερικά ενθαρρυντικά παραδείγματα, ώστε να μπορείτε να δείτε τη μεγαλύτερη εικόνα και στη συνέχεια εξερευνούμε τις λεπτομέρειες.
Κάθε ενότητα του βιβλίου συνδυάζεται με ασκήσεις που θα σας βοηθήσουν να εξασκήσετε αυτά που έχετε μάθει.
Αν και μπορεί να είναι δελεαστικό να παραλείψετε τις ασκήσεις, δεν υπάρχει καλύτερος τρόπος για να μάθετε από την εξάσκηση πάνω σε πραγματικά προβλήματα.

## Τι δεν θα μάθετε

Υπάρχουν πολλά σημαντικά θέματα που δεν καλύπτει αυτό το βιβλίο.
Πιστεύουμε ότι είναι σημαντικό να παραμείνετε αδίστακτα συγκεντρωμένοι στα βασικά, ώστε να μπορείτε να είστε έτοιμοι όσο το δυνατόν γρηγορότερα.
Αυτό σημαίνει ότι αυτό το βιβλίο δεν μπορεί να καλύψει κάθε σημαντικό θέμα.

### Μοντελοποίηση

Η μοντελοποίηση είναι εξαιρετικά σημαντική για την επιστήμη των δεδομένων, αλλά είναι ένα μεγάλο θέμα και, δυστυχώς, απλώς δεν έχουμε τον χώρο να της δώσουμε την κάλυψη που της αξίζει εδώ.
Για να μάθετε περισσότερα σχετικά με τη μοντελοποίηση, προτείνουμε ανεπιφύλακτα το [Tidy Modeling with R](https://www.tmwr.org) από τους συναδέλφους μας Max Kuhn και Julia Silge.
Αυτό το βιβλίο θα σας διδάξει την οικογένεια πακέτων tidymodels, τα οποία, όπως μπορείτε να μαντέψετε από το όνομα, μοιράζονται πολλούς κανόνες με τα πακέτα του tidyverse που χρησιμοποιούμε σε αυτό το βιβλίο.

### Δεδομένα μεγάλου όγκου

Κυρίως και με υπερηφάνεια, αυτό το βιβλίο εστιάζει σε μικρά σύνολα δεδομένων με δυνατότητα να αποθηκευτούν στη μνήμη.
Αυτό είναι το σωστό μέρος για να ξεκινήσετε, επειδή δεν μπορείτε να αντιμετωπίσετε δεδομένα μεγάλου όγκου εκτός εάν έχετε εμπειρία με μικρά σύνολα δεδομένων.
Τα εργαλεία που θα μάθετε στο μεγαλύτερο μέρος αυτού του βιβλίου θα χειριστούν εύκολα εκατοντάδες megabyte δεδομένων και με λίγη προσοχή, μπορείτε να τα χρησιμοποιήσετε για να εργαστείτε με λίγα gigabyte δεδομένων.
Θα σας δείξουμε επίσης πώς να λαμβάνετε δεδομένα από βάσεις δεδομένων και αρχεία parquet, τα οποία χρησιμοποιούνται συχνά για την αποθήκευση δεδομένων μεγάλoυ όγκου.
Δεν θα μπορείτε απαραίτητα να εργαστείτε με ολόκληρο το σύνολο δεδομένων, αλλά αυτό δεν είναι πρόβλημα, επειδή χρειάζεστε μόνο ένα υποσύνολο για να απαντήσετε στην ερώτηση που σας ενδιαφέρει.

Εάν εργάζεστε τακτικά με δεδομένα μεγαλύτερου όγκου (ας πόυμε 10--100 GB), συνιστούμε να μάθετε περισσότερα σχετικά με το πακέτο [data.table](https://github.com/Rdatatable/data.table).
Δεν το μαθαίνουμε εδώ επειδή χρησιμοποιεί διαφορετική διεπαφή από το tidyverse και απαιτεί από εσάς να μάθετε μερικούς διαφορετικούς κανόνες.
Ωστόσο, είναι απίστευτα ταχύτερο και αξίζει να επενδύσετε λίγο χρόνο για να το μάθετε εάν εργάζεστε με δεδομένα μεγάλου όγκου.

### Python, Julia και φίλοι

Σε αυτό το βιβλίο, δεν θα μάθετε τίποτα για Python, Julia ή οποιαδήποτε άλλη γλώσσα προγραμματισμού χρήσιμη για την επιστήμη των δεδομένων.
Αυτό δεν συμβαίνει επειδή πιστεύουμε ότι αυτά τα εργαλεία είναι κακά.
Δεν είναι!
Και στην πράξη, οι περισσότερες ομάδες επιστήμης δεδομένων χρησιμοποιούν έναν συνδυασμό γλωσσών, σε πολλές περιπτωσεις τουλάχιστον R και Python.
Πιστεύουμε όμως ακράδαντα ότι είναι καλύτερο να είστε καλοί σε ένα εργαλείο τη φορά και η R είναι ένα εξαιρετικό μέρος για να ξεκινήσετε.

## Προαπαιτούμενα

Κάναμε μερικές υποθέσεις σχετικά με αυτά που ήδη γνωρίζετε για να αξιοποιήσετε στο έπακρο αυτό το βιβλίο.
Θα πρέπει να κατέχετε γενική αριθμητική παιδεία και είναι χρήσιμο εάν έχετε ήδη κάποια βασική εμπειρία προγραμματισμού.
Εάν δεν έχετε προγραμματίσει ποτέ πριν, μπορεί να βρείτε το [Hands on Programming with R](https://rstudio-education.github.io/hopr/) του Garrett ως ένα πολύτιμο συμπλήρωμα αυτού του βιβλίου.

Χρειάζεστε τέσσερα πράγματα για να εκτελέσετε τον κώδικα σε αυτό το βιβλίο: την R, το RStudio, μια συλλογή πακέτων R που ονομάζεται **tidyverse** και μια μερίδα άλλων πακέτων.
Τα πακέτα (ή βιβλιοθήκες) είναι οι θεμελιώδεις μονάδες του αναπαράξιμου κώδικα R.
Περιλαμβάνουν επαναχρησιμοποιήσιμες συναρτήσεις, τεκμηρίωση που περιγράφει τον τρόπο χρήσης τους και δείγματα δεδομένων.

### R

Για να κατεβάσετε την R, μεταβείτε στο CRAN, **c**omprehensive **R** **a**rchive **n**etwork, <https://cloud.r-project.org>.
Μια νέα κύρια έκδοση της R κυκλοφορεί μία φορά κάθε χρόνο καθώς υπάρχουν και 2-3 μικρές εκδόσεις κάθε χρόνο.
Είναι καλή ιδέα να αναβαθμίζετε τακτικά.
Η αναβάθμιση μπορεί να περιέχει λίγη ταλαιπωρία, ειδικά για τις κύριες εκδόσεις που απαιτούν να εγκαταστήσετε ξανά όλα τα πακέτα σας, αλλά η αναβολή κάνει τα πράγματα μόνο χειρότερα.
Προτείνουμε την R 4.2.0 ή κάποια μεταγενέστερη για αυτό το βιβλίο.

### RStudio

Το RStudio είναι ένα ολοκληρωμένο περιβάλλον ανάπτυξης (integrated development environment ή IDE), για προγραμματισμό με R, το οποίο μπορείτε να κατεβάσετε από το <https://posit.co/download/rstudio-desktop/>.
Το RStudio ενημερώνεται μερικές φορές το χρόνο και θα σας ενημερώνει αυτόματα όταν κυκλοφορήσει μια νέα έκδοση, επομένως δεν χρειάζεται να το ελέγξετε ξανά.
Είναι καλή ιδέα να κάνετε συχνές αναβαθμίσεις για να επωφεληθείτε από τις πιο πρόσφατες και καλύτερες δυνατότητες.
Για αυτό το βιβλίο, βεβαιωθείτε ότι έχετε τουλάχιστον το RStudio 2022.02.0.

Όταν ανοίγετε το RStudio, @fig-rstudio-console, θα παρατηρήσετε στο περιβάλλον δύο βασικές περιοχές: το παράθυρο της κονσόλας και το παράθυρο εξόδου.
Προς το παρόν, το μόνο που χρειάζεται να γνωρίζετε είναι ότι πληκτρολογείτε τον κώδικα σε R στο παράθυρο της κονσόλας και πατάτε enter για να τον εκτελέσετε.
Θα μάθετε περισσότερα καθώς προχωράμε![^intro-1]

[^intro-1]: Εάν θέλετε μια ολοκληρωμένη επισκόπηση όλων των δυνατοτήτων του RStudio, ανατρέξτε στον αντίστοιχο Οδηγό Χρήστη στη διεύθυνση <https://docs.posit.co/ide/user>.

```{r}
#| label: fig-rstudio-console
#| echo: false
#| out-width: ~
#| fig-cap: |
#|   Το περιβάλλον του Rstudio έχει δύο βασικές περιοχές: πληκτρολογήστε τον κώδικα σε R στο πεδίο της κονσόλας (Console)
#|   στα αριστερά, και παρατηρήστε τα διαγράμματα που έχουν δημιουργηθει στο πεδίο της εξόδου (Output) στα δεξιά.
#| fig-alt: |
#|   Το περιβάλλον του RStudio με τα πεδία της Κονσόλας και Εξόδου τονισμένα.
knitr::include_graphics("diagrams/rstudio/console.png", dpi = 270)
```

### Το tidyverse

Θα χρειαστεί επίσης να εγκαταστήσετε μερικά πακέτα R.
Ένα **πακέτο** (ή βιβλιοθήκη) είναι μια συλλογή συναρτήσεων, δεδομένων και εγχειριδίων που επεκτείνει τις βασικές δυνατότητες της R.
Η χρήση πακέτων είναι το κλειδί για την επιτυχή χρήση της R.
Η πλειοψηφία των πακέτων που θα μάθετε σε αυτό το βιβλίο είναι μέρος του λεγόμενου tidyverse.
Όλα τα πακέτα στο tidyverse μοιράζονται μια κοινή φιλοσοφία τύπου δεδομένων και προγραμματισμού σε R και έχουν σχεδιαστεί για να μπορούν να συνδυαστούν.

Μπορείτε να εγκαταστήσετε το πλήρες tidyverse με μία μόνο γραμμή κώδικα:

```{r}
#| eval: false

install.packages("tidyverse")
```

Στον υπολογιστή σας, πληκτρολογήστε αυτήν τη γραμμή κώδικα στην κονσόλα και στη συνέχεια πατήστε enter για να την εκτελέσετε.
Η R θα κατεβάσει τα πακέτα από το CRAN και θα τα εγκαταστήσει στον υπολογιστή σας.

Δεν θα μπορείτε να χρησιμοποιήσετε τις συναρτήσεις, τα αντικείμενα ή τα έγγραφα βοήθειας σε ένα πακέτο μέχρι να το φορτώσετε με τη συνάρτηση `library()`.
Αφού εγκαταστήσετε ένα πακέτο, μπορείτε να το φορτώσετε χρησιμοποιώντας τη συνάρτηση `library()`:

```{r}
library(tidyverse)
```

Αυτό σας λέει ότι το tidyverse φορτώνει εννέα πακέτα: dplyr, forcats, ggplot2, lubridate, purrr, readr, stringr, tibble, tidyr.
Αυτά θεωρούνται ο **πυρήνας** του tidyverse, καθώς θα τα χρησιμοποιείτε σχεδόν σε κάθε ανάλυση.

Τα πακέτα στο tidyverse αλλάζουν αρκετά συχνά.
Μπορείτε να δείτε εάν υπάρχουν διαθέσιμες ενημερώσεις εκτελώντας `tidyverse_update()`.

### Άλλα πακέτα

Υπάρχουν πολλά άλλα εξαιρετικά πακέτα που δεν αποτελούν μέρος του tidyverse μιας και επιλύουν προβλήματα που ανοίκουν σε διαφορετικούς τομείς ή έχουν σχεδιαστεί με ένα διαφορετικό σύνολο βασικών αρχών.
Αυτό δεν τα κάνει καλύτερα ή χειρότερα - απλά τα κάνει διαφορετικά.
Με άλλα λόγια, το συμπληρωματικό κομμάτι του tidyverse δεν είναι το messyverse αλλά άλλοι κόσμοι (universes) αλληλένδετων πακέτων.
Καθώς αντιμετωπίζετε περισσότερα έργα επιστήμης δεδομένων με την R, θα μάθετε νέα πακέτα και νέους τρόπους σκέψης που σχετίζονται με δεδομένα.

Σε αυτό το βιβλίο θα χρησιμοποιήσουμε πολλά πακέτα εκτός του tidyverse.
Για παράδειγμα, θα χρησιμοποιήσουμε τα ακόλουθα πακέτα επειδή παρέχουν ενδιαφέροντα σύνολα δεδομένων για τη διαδικασία εκμάθησης της R:

```{r}
#| eval: false

install.packages(
  c("arrow", "babynames", "curl", "duckdb", "gapminder", 
    "ggrepel", "ggridges", "ggthemes", "hexbin", "janitor", "Lahman", 
    "leaflet", "maps", "nycflights13", "openxlsx", "palmerpenguins", 
    "repurrrsive", "tidymodels", "writexl")
  )
```

Θα χρησιμοποιήσουμε επίσης μια επιλογή από άλλα πακέτα για μεμονωμένα παραδείγματα.
Δεν χρειάζεται να τα εγκαταστήσετε τώρα, απλά να θυμάστε ότι κάθε φορά που βλέπετε ένα σφάλμα όπως αυτό:

```{r}
#| eval: false

library(ggrepel)
#> Error in library(ggrepel) : there is no package called ‘ggrepel’
```

Θα πρέπει να εκτελέσετε `install.packages("ggrepel")` για να εγκαταστήσετε το πακέτο.

## Εκτελώντας κώδικα R

Η προηγούμενη ενότητα σάς έδειξε αρκετά παραδείγματα εκτέλεσης κώδικα R.
Ο κώδικας στο βιβλίο δείχνει κάπως έτσι:

```{r}
#| eval: true
1 + 2
```

Αν εκτελέσετε τον ίδιο κώδικα στο πεδίο της κονσόλας σας, θα δείχνει κάπως έτσι:

```         
> 1 + 2
[1] 3
```

Υπάρχουν δύο βασικές διαφορές.
Στην κονσόλα σας, πληκτρολογείτε (τον κώδικα) μετά το `>`, που ονομάζεται **εντολή**.
Δεν δείχνουμε την εντολή στο βιβλίο.
Στο βιβλίο, η έξοδος αφαιρείται τοποθετόντας τη ως σχόλιο με `#>`.
Στην κονσόλα σας, εμφανίζεται αμέσως μετά τον κώδικά σας.
Αυτές οι δύο διαφορές σημαίνουν ότι εάν εργάζεστε με μια ηλεκτρονική έκδοση του βιβλίου, μπορείτε εύκολα να αντιγράψετε κώδικα από το βιβλίο και να τον επικολλήσετε στην κονσόλα.

Σε όλο το βιβλίο, χρησιμοποιούμε ένα συνεπές σύνολο κανόνων για να αναφερθούμε στον κώδικα:

-   Οι συναρτήσεις εμφανίζονται σε μια γραμματοσειρά κώδικα και ακολουθούνται από παρενθέσεις, όπως `sum()` ή `mean()`.

-   Άλλα αντικείμενα R (όπως ορίσματα δεδομένων ή συναρτήσεων) είναι σε γραμματοσειρά κώδικα, χωρίς παρενθέσεις, όπως `flights` ή `x`.

-   Μερικές φορές, για να ξεκαθαρίσουμε από ποιο πακέτο προέρχεται ένα αντικείμενο, θα χρησιμοποιήσουμε το όνομα του πακέτου ακολουθούμενο από δύο άνω και κάτω τελείες, όπως `dplyr::mutate()` ή `nycflights13::flights`.
    Αυτός ο κώδικας R είναι επίσης έγκυρος.

## Ευχαριστίες

Αυτό το βιβλίο δεν είναι μόνο προϊόν των Hadley, Mine και Garrett, αλλά είναι το αποτέλεσμα πολλών συζητήσεων (δια ζώσης και διαδικτυακών) που είχαμε με πολλά άτομα μέσα απο την κοινότητα της R.
Είμαστε απίστευτα ευγνώμονες για όλες τις συζητήσεις που είχαμε μαζί σας.
Σας ευχαριστούμε πάρα πολύ!

```{r}
#| eval: false
#| echo: false

library(tidyverse)
contribs_all_json <- gh::gh("/repos/:owner/:repo/contributors",
  owner = "hadley",
  repo = "r4ds",
  .limit = Inf
)
contribs_all <- tibble(
  login = contribs_all_json |> map_chr("login"),
  n = contribs_all_json |> map_int("contributions")
)

contribs_old <- read_csv("contributors.csv", col_types = list())
contribs_new <- contribs_all |> anti_join(contribs_old, by = "login")

# Get info for new contributors
needed_json <- map(
  contribs_new$login, 
  ~ gh::gh("/users/:username", username = .x),
  .progress = TRUE
)
info_new <- tibble(
  login = contribs_new$login,
  name = map_chr(needed_json, "name", .default = NA),
  blog = map_chr(needed_json, "blog", .default = NA)
)
info_old <- contribs_old |> select(login, name, blog)
info_all <- bind_rows(info_old, info_new)

contribs_all <- contribs_all |> 
  left_join(info_all, by = "login") |> 
  mutate(login_lowercase = str_to_lower(login)) |>
  arrange(login_lowercase) |>
  select(-login_lowercase)
write_csv(contribs_all, "contributors.csv")
```

```{r}
#| results: asis
#| echo: false
#| message: false

library(dplyr)
contributors <- readr::read_csv("contributors.csv")
contributors <- contributors |> 
  filter(!login %in% c("hadley", "garrettgman", "mine-cetinkaya-rundel")) |> 
  mutate(
    login = paste0("\\@", login),
    desc = ifelse(is.na(name), login, paste0(name, " (", login, ")"))
  )

cat("Αυτό το βιβλίο είναι γραμμένο απο κοινού με πολλά άτομα να έχουν συμβάλλει μέσω pull requests. Ένα μεγάλο ευχαριστώ σε όλους ",nrow(contributors), " εσάς που κατέθεσατε βελτιώσεις μέσω pull requests του GitHub (με αλφαβητική σειρα ανα όνομα χρήστη): ", sep = "")
cat(paste0(contributors$desc, collapse = ", "))
cat(".\n")
```

## Κολοφώνας

Μια ηλεκτρονική έκδοση αυτού του βιβλίου είναι διαθέσιμη στη διεύθυνση <https://r4ds.hadley.nz>.
Θα συνεχίσει να εξελίσσεται μεταξύ των αναθεωρήσεων του φυσικού βιβλίου.
Ο πηγαίος κώδικας του βιβλίου είναι διαθέσιμος στη διεύθυνση <https://github.com/hadley/r4ds>.
Το βιβλίο δημιουργήθηκε με [Quarto](https://quarto.org), το οποίο διευκολύνει τη σύνταξη βιβλίων που συνδυάζουν κείμενο και εκτελέσιμο κώδικα.

```{r}
#| eval: false
#| echo: false
#| results: asis

pkgs <- sessioninfo::package_info(
  tidyverse:::tidyverse_packages(),
  dependencies = FALSE
)
df <- tibble(
  package = pkgs$package,
  version = pkgs$ondiskversion,
  source = gsub("@", "\\\\@", pkgs$source)
)
knitr::kable(df, format = "markdown")
```

```{r}
#| include: false

cli:::ruler()
```
