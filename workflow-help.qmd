# Ροή εργασία: αποζητώντας βοήθεια {#sec-workflow-getting-help}

```{r}
#| echo: false

source("_common.R")
```

Αυτό το βιβλίο δεν είναι ένα νησί.
δεν υπάρχει καμία μοναδική πηγή που θα σας επιτρέψει να κυριαρχήσετε την R.
Καθώς αρχίζετε να εφαρμόζετε τις τεχνικές που περιγράφονται σε αυτό το βιβλίο στα δικά σας δεδομένα, σύντομα θα βρείτε ερωτήσεις που δεν απαντάμε εδώ.
Αυτή η ενότητα περιγράφει μερικές συμβουλές για το πώς να λάβετε βοήθεια και για το πως να συνεχίσετε να μαθαίνετε.

## Η Google είναι φίλος σας

Αν κολλήσετε, ξεκινήστε με τη μηχανή αναζήτησης της Google.
Τυπικά, η προσθήκη του "R" σε ένα ερώτημα είναι αρκετή για να περιοριστεί σε σχετικά αποτελέσματα: εάν η αναζήτηση δεν είναι χρήσιμη, σημαίνει συχνά ότι δεν υπάρχουν διαθέσιμα αποτελέσματα ειδικά για την R.
Επιπλέον, η προσθήκη ονομάτων πακέτων όπως "tidyverse" ή "ggplot2" θα σας βοηθήσει να περιορίσετε τα αποτελέσματα σε κώδικα που θα σας φαίνεται πιο οικείος, π.χ.
"πώς να κάνετε ένα boxplot στην R" έναντι του "πώς να δημιουργήσετε ένα boxplot στην R με ggplot2".
Η αναζήτηση της Google είναι επίσης ιδιαίτερα χρήσιμη για μηνύματα λάθους.
Αν λάβετε ένα μήνυμα σφάλματος και δεν έχετε ιδέα τι σημαίνει, δοκιμάστε να το γκουγκλάρετε!
Οι πιθανότητες είναι ότι κάποιος άλλος έχει μπερδευτεί με αυτό στο παρελθόν και θα υπάρξει βοήθεια κάπου στον Ιστό.
(Εάν το μήνυμα σφάλματος δεν είναι στα Αγγλικά, εκτελέστε το `Sys.setenv(LANGUAGE = "en")` και εκτελέστε ξανά τον κωδικό.
είναι πιο πιθανό να βρείτε βοήθεια για μηνύματα σφάλματος στα αγγλικά.)

Εάν η Google δεν σας βοηθήσει, δοκιμάστε το [Stack Overflow](https://stackoverflow.com).
Ξεκινήστε αφιερώνοντας λίγο χρόνο αναζητώντας μια υπάρχουσα απάντηση, συμπεριλαμβανομένου του «\[R\]», για να περιορίσετε την αναζήτησή σας σε ερωτήσεις και απαντήσεις που χρησιμοποιούν την R.

## Δημιουργώντας ένα αναπαραγώγιμο παράδειγμα (reprex)

Εάν το γκουγκλάρισμα σας δεν βρίσκει τίποτα χρήσιμο, μια πολύ καλή ιδέα είναι να ετοιμάσετε ένα **reprex**, ένα ελάχιστο αναπαραγώγιμο παράδειμα (**repr**oducible **ex**ample).
Ένα καλό reprex διευκολύνει τους άλλους να σας βοηθήσουν και συχνά θα εντοπίσετε μόνοι σας το πρόβλημα κατά τη διάρκεια της δημιουργίας του.
Υπάρχουν δύο μέρη για τη δημιουργία ενός reprex:

-   Πρώτα, πρέπει να κάνετε τον κώδικά σας αναπαραγώγιμο.
    Αυτό σημαίνει ότι πρέπει να καταγράψετε τα πάντα, δηλαδή να συμπεριλάβετε τυχόν κλήσεις σε βιβλιοθήκες (`library()`) και να δημιουργήσετε όλα τα απαραίτητα αντικείμενα.
    Ο ευκολότερος τρόπος για να βεβαιωθείτε ότι το έχετε κάνει είναι να χρησιμοποιήσετε το πακέτο reprex.

-   Δεύτερον, πρέπει να το κάνετε ελάχιστο.
    Απογυμνώστε όλα όσα δεν σχετίζονται άμεσα με το πρόβλημά σας.
    Αυτό συνήθως περιλαμβάνει τη δημιουργία ενός πολύ μικρότερου και απλούστερου αντικειμένου R από αυτό που αντιμετωπίζετε στην πραγματική ζωή ή ακόμη και τη χρήση ενσωματωμένων δεδομένων.

Αυτό ακούγεται σαν πολλή δουλειά!
Και μπορεί να είναι, αλλά έχει μεγάλη απόδοση:

-   Το 80% των περιπτώσεων, η δημιουργία ενός εξαιρετικού reprex αποκαλύπτει την πηγή του προβλήματός σας.
    Είναι εκπληκτικό πόσο συχνά η διαδικασία σύνταξης ενός αυτοτελούς και ελάχιστου παραδείγματος σάς επιτρέπει να απαντήσετε στη δική σας ερώτηση.

-   Το υπόλοιπο 20% των περιπτώσεων, θα έχετε συλλάβει την ουσία του προβλήματός σας με τρόπο που είναι εύκολο για τους άλλους να πειραματιστούν και να παίξουν με αυτό.
    Αυτό βελτιώνει σημαντικά τις πιθανότητές σας να λάβετε βοήθεια!

Όταν δημιουργείτε ένα reprex με το χέρι, είναι εύκολο να σας ξεφύγει κάτι κατά λάθος, που σημαίνει ότι ο κώδικάς σας δεν μπορεί να εκτελεστεί στον υπολογιστή κάποιου άλλου.
Αποφύγετε αυτό το πρόβλημα χρησιμοποιώντας το πακέτο reprex, το οποίο είναι εγκατεστημένο ως μέρος του tidyverse.
Ας υποθέσουμε ότι αντιγράψατε αυτόν τον κώδικα στο πρόχειρό σας (ή, στον διακομιστή RStudio ή στο Cloud - επιλέξτε τον):

```{r}
#| eval: false

y <- 1:4
mean(y)
```

Στη συνέχεια καλέστε την `reprex()`, όπου η προεπιλεγμένη έξοδος είναι διαμορφωμένο σύμφωνα με το πρότυπα του GitHub:

``` r
reprex::reprex()
```

Ένα σωστά διαμορφωμένο HTML θα εμφανιστεί στον Viewer του RStudio (αν βρίσκεστε στο RStudio) ή, διαφορετικά, στο προεπιλεγμένο πρόγραμμα περιήγησής σας.
Το reprex αντιγράφεται αυτόματα στο πρόχειρό σας (στο RStudio Server ή στο Cloud, θα χρειαστεί να το αντιγράψετε μόνοι σας):

````         
``` r
y <- 1:4
mean(y)
#> [1] 2.5
```
````

Αυτό το κείμενο έχει μορφοποιηθεί με έναν ειδικό τρόπο, που ονομάζεται Markdown, ο οποίος μπορεί να επικολληθεί σε ιστότοπους όπως το StackOverflow ή το Github, και θα το αποδώσουν αυτόματα ώστε να μοιάζει με κώδικα.
Δείτε πώς θα έμοιαζε αυτό το Markdown στο GitHub:

```{r}
#| eval: false

y <- 1:4
mean(y)
#> [1] 2.5
```

Οποιοσδήποτε άλλος μπορεί να το αντιγράψει, να επικολλήσει και να το εκτελέσει αμέσως.

Υπάρχουν τρία πράγματα που πρέπει να συμπεριλάβετε για να κάνετε το παράδειγμά σας αναπαραγώγιμο: τα απαιτούμενα πακέτα, τα δεδομένα και τον κώδικα.

1.  Τα **πακέτα** θα πρέπει να φορτώνονται στο επάνω μέρος του αρχείου κώδικα, ώστε να είναι εύκολο να δείτε ποια χρειάζεται το παράδειγμα.
    Αυτή είναι μια καλή στιγμή για να ελέγξετε ότι χρησιμοποιείτε την πιο πρόσφατη έκδοση κάθε πακέτου - μπορεί να έχετε ανακαλύψει ένα σφάλμα που έχει διορθωθεί από τότε που εγκαταστήσατε ή ενημερώσατε την τελευταία φορά το πακέτο.
    Για πακέτα στο tidyverse, ο ευκολότερος τρόπος ελέγχου είναι εκτελώντας το `tidyverse_update()`.

2.  Ο ευκολότερος τρόπος για να συμπεριλάβετε **δεδομένα** είναι να χρησιμοποιήσετε την `dput()` για να δημιουργήσετε τον κώδικα R που απαιτείται για την αναδημιουργία του.
    Για παράδειγμα, για να δημιουργήσετε ξανά το σύνολο δεδομένων `mtcars` στην R, εκτελέστε τα ακόλουθα βήματα:

    1.  Τρέξτε `dput(mtcars)` στην R.
    2.  Αντιγράψτε το αποτέλεσμα.
    3.  Στο reprex, πληκτρολογήστε `mtcars <-`, και στη συνέχει κάνε επικόλληση το κομμάτι που αντιγράψατε.

    Προσπαθήστε να χρησιμοποιήσετε το μικρότερο υποσύνολο των δεδομένων σας που αποκαλύπτει όμως το πρόβλημα.

3.  Αφιερώστε λίγο χρόνο για να διασφαλίσετε ότι ο **κώδιακς** σας είναι εύκολος να τον διαβάσουν οι άλλοι:

    -   Βεβαιωθείτε ότι έχετε χρησιμοποιήσει κενά και τα ονόματα των μεταβλητών σας είναι συνοπτικά αλλά ενημερωτικά.

    -   Χρησιμοποιήστε σχόλια για να υποδείξετε πού βρίσκεται το πρόβλημά σας.

    -   Κάντε ό,τι μπορείτε για να αφαιρέσετε οτιδήποτε δεν σχετίζεται με το πρόβλημα.

    Όσο πιο σύντομος είναι ο κώδικάς σας, τόσο πιο εύκολο είναι να κατανοηθεί και τόσο πιο εύκολο να διορθωθεί.

Ολοκληρώστε ελέγχοντας ότι έχετε κάνει πραγματικά ένα αναπαραγώγιμο παράδειγμα ξεκινώντας μια νέα περίοδο λειτουργίας στην R και αντιγράφοντας και επικολλώντας το αρχείο κώδικα σας.

Η δημιουργία reprexes δεν είναι απλή και θα χρειαστεί λίγη εξάσκηση για να μάθετε να δημιουργείτε καλά, πραγματικά ελάχιστα reprexes.
Ωστόσο, το να μάθετε να κάνετε ερωτήσεις που περιλαμβάνουν τον κώδικα σας και να επενδύετε χρόνο για να τον κάνετε αναπαραγώγιμο θα συνεχίσει να αποδίδει καθώς μαθαίνετε και κατακτάτε την R.

## Επενδύοντας στον εαυτό σας

Θα πρέπει επίσης να αφιερώσετε λίγο χρόνο για να προετοιμάσετε τον εαυτό σας για να λύνει προβλήματα πριν αυτά εμφανιστούν.
Επενδύοντας λίγο χρόνο στην εκμάθηση της R κάθε μέρα θα αποδώσει πολύ μακροπρόθεσμα.
Ένας τρόπος είναι να παρακολουθήσετε τι κάνει η ομάδα του tidyverse στο [ιστολόγιο του tidyverse](https://www.tidyverse.org/blog/).
Για να συμβαδίσετε με την κοινότητα της R ευρύτερα, συνιστούμε να διαβάζετε το [R Weekly](https://rweekly.org): είναι μια προσπάθεια της κοινότητας να συγκεντρώνει τις πιο ενδιαφέρουσες ειδήσεις στην κοινότητα της R κάθε εβδομάδα.

## Σύνοψη

Αυτό το κεφάλαιο ολοκληρώνει το μέρος του βιβλίου "Ολόκληρη η εικόνα".
Τώρα έχετε δει τα πιο σημαντικά μέρη της διαδικασίας της επιστήμης δεδομένων: οπτικοποίηση, μετασχηματισμός, τακτοποίηση και εισαγωγή.
Έχετε πλέον μια ολιστική άποψη της όλης διαδικασίας και αρχίζουμε να μπαίνουμε στις λεπτομέρειες των μικρών κομματιών.

Το επόμενο μέρος του βιβλίου, Visualize (Οπτικοποίησε), κάνει μια βαθύτερη βουτιά στη γραμματική των γραφικών και στη δημιουργία οπτικοποιήσεων δεδομένων με τη ggplot2, παρουσιάζει πώς να χρησιμοποιείτε τα εργαλεία που έχετε μάθει μέχρι τώρα για τη διεξαγωγή διερευνητικής ανάλυσης δεδομένων και εισάγει καλές πρακτικές για τη δημιουργία διαγραμμάτων για επικοινωνία.
